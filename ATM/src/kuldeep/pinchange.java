/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kuldeep;

import jaco.mp3.player.MP3Player;
import java.awt.Color;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author kuldeep
 */
public class pinchange extends javax.swing.JFrame {
public static final String epin ="C:\\Users\\kuldeep\\Documents\\NetBeansProjects\\ATM\\src\\audio\\enterpin.mp3";
MP3Player mp3pin=new MP3Player(new File(epin));
    /**
     * Creates new form pinchange
     */
    public pinchange() {
        initComponents();
        UIManager.put("OptionPane.messageForeground", Color.BLUE);
        mp3pin.play();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        dcorrect = new javax.swing.JButton();
        dinst1 = new javax.swing.JLabel();
        dcorrect1 = new javax.swing.JButton();
        newpin = new javax.swing.JPasswordField();
        oldpin = new javax.swing.JPasswordField();
        dinst2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setBackground(new java.awt.Color(244, 244, 244));
        jLabel3.setFont(new java.awt.Font("Century", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(244, 244, 244));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ATM SYSTEM");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 490, -1));

        dcorrect.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        dcorrect.setForeground(new java.awt.Color(0, 102, 0));
        dcorrect.setText("CONFIRM");
        dcorrect.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dcorrect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcorrectActionPerformed(evt);
            }
        });
        getContentPane().add(dcorrect, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 360, 320, 41));

        dinst1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        dinst1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dinst1.setText("New Pin");
        getContentPane().add(dinst1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, 140, 30));

        dcorrect1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        dcorrect1.setForeground(new java.awt.Color(102, 0, 0));
        dcorrect1.setText("CANCEL");
        dcorrect1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        dcorrect1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcorrect1ActionPerformed(evt);
            }
        });
        getContentPane().add(dcorrect1, new org.netbeans.lib.awtextra.AbsoluteConstraints(839, 450, 320, 41));

        newpin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                newpinKeyTyped(evt);
            }
        });
        getContentPane().add(newpin, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 280, 200, 30));

        oldpin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                oldpinKeyTyped(evt);
            }
        });
        getContentPane().add(oldpin, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 210, 200, 30));

        dinst2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        dinst2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dinst2.setText("Current Pin");
        getContentPane().add(dinst2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 210, 140, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/589298.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, -20, 1180, 655));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void dcorrectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcorrectActionPerformed
        // TODO add your handling code here:'
        
         
          try{  
              
               int u=0;
            int bl=0;int amt1=0;
             Class.forName("com.mysql.cj.jdbc.Driver");
               Connection conn2 = DriverManager.getConnection("jdbc:mysql://localhost:3306/atm","root","mysql");
                String sql2 = "Select cardnumber from atmsystem";
                
               PreparedStatement pstmt2 = conn2.prepareStatement(sql2);                        
                
           
             ResultSet rs2= pstmt2.executeQuery();
             if(rs2.next())
             {
                 u=rs2.getInt("cardnumber");
             }
              
              
              
              
              Class.forName("com.mysql.cj.jdbc.Driver");
               Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/atm","root","mysql");
                String sql1 = "select cardpin from  card where cardno=?  ";
                
               PreparedStatement pstmt1 = conn.prepareStatement(sql1);                        
                 
            pstmt1.setInt(1 , u);
               ResultSet rs = pstmt1.executeQuery();
               
              
            
               if(rs.next())
               {
                  bl=rs.getInt("cardpin");
                 
               }
               int upin=Integer.parseInt(newpin.getText());
               int b2=Integer.parseInt(oldpin.getText());
               if(bl==b2)
               {
               Class.forName("com.mysql.cj.jdbc.Driver");
               Connection conn3 = DriverManager.getConnection("jdbc:mysql://localhost:3306/atm","root","mysql");
                String sql3 = "update card set cardpin= ? WHERE cardno=? ";
                
               PreparedStatement pstmt3 = conn3.prepareStatement(sql3);                        
                 
                  pstmt3.setInt(1 , upin);
                    pstmt3.setInt(2 , u);       
               pstmt3.executeUpdate();
               
               
               JOptionPane.showMessageDialog(this,"Pin change Successfully ");
               new Login().setVisible(true);
               this.dispose();
            
               }
               else
                  
               {    oldpin.setText("");
                       newpin.setText("");
                       
                   JOptionPane.showMessageDialog(this,"Incorrect Current pin ");
               }
               
          }
          catch(Exception e){
              oldpin.setText("");
                       newpin.setText("");
              
              JOptionPane.showMessageDialog(this,e+"Incorrect Current pin ");}
               

    }//GEN-LAST:event_dcorrectActionPerformed

    private void dcorrect1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcorrect1ActionPerformed
        // TODO add your handling code here:
        
        new Choice().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_dcorrect1ActionPerformed

    private void oldpinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oldpinKeyTyped
        // TODO add your handling code here:
        char key;
        key=evt.getKeyChar();
        
        if(  !(((key>='0') && (key<='9')))  && (key!='\b'))
        evt.consume();

if(oldpin.getText().length()>=4) {  
   evt.consume();}





    }//GEN-LAST:event_oldpinKeyTyped

    private void newpinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newpinKeyTyped
        // TODO add your handling code here:
        char key;
        key=evt.getKeyChar();
        
        if(  !(((key>='0') && (key<='9')))  && (key!='\b'))
        evt.consume();

if(newpin.getText().length()>=4) {  
   evt.consume();}
    }//GEN-LAST:event_newpinKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pinchange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pinchange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pinchange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pinchange.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pinchange().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dcorrect;
    private javax.swing.JButton dcorrect1;
    private javax.swing.JLabel dinst1;
    private javax.swing.JLabel dinst2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField newpin;
    private javax.swing.JPasswordField oldpin;
    // End of variables declaration//GEN-END:variables
}
